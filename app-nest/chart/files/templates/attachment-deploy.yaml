apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "intelex.attachment.fullname" . }}
  labels:
{{ include "intelex.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.global.attachment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "intelex.attachment.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "intelex.attachment.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.forceUpdates }}
        rollme: {{ randAlphaNum 5 | quote }}
      {{- end }}
      annotations:
        seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
        apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
        seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
        apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
    spec:
      serviceAccountName: {{ include "intelex.attachment.fullname" . }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                      - key: "app.kubernetes.io/name"
                        operator: In
                        values:
                        - {{ include "intelex.attachment.fullname" . }}
                  topologyKey: "kubernetes.io/hostname"
      containers:
        - name: server
        {{- if .Values.global.dockerRegistry }}
          image: {{ .Values.global.dockerRegistry }}/intelex-one-attachment:{{ .Values.global.attachment.image.tag }}
        {{- else }}
          image: intelex-one-attachment:{{ .Values.global.attachment.image.tag }}
        {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /liveness
              port: 3000
            initialDelaySeconds: 5
            timeoutSeconds: 10
            failureThreshold: 10
          imagePullPolicy: {{ .Values.global.attachment.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: {{ .Values.global.nodeEnv | default "production" }}
            - name: ENVIRONMENT
              value: {{ .Values.global.environment }}
            - name: LOG_LEVEL
              value: {{ .Values.global.attachment.logLevel }}
            - name: PORT
              value: {{ .Values.global.attachment.port | quote }}
            - name: ENABLE_HTTP_LOGGER
              value: {{ .Values.global.attachment.enableHttpLogger }}
            - name: DB_MONGO_HOST
              value: {{ .Values.global.attachment.mongoHost }}
            - name: DB_MONGO_PORT
              value: {{ .Values.global.attachment.mongoPort | quote }}
            - name: DB_MONGO_NAME
              value: {{ .Values.global.attachment.mongoName }}
            - name: DB_MONGO_USER
              value: {{ .Values.global.attachment.mongoUser }}
            - name: DB_MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: attachment-secret
                  key: mongoPassword
            - name: AZURE_ACCOUNT_NAME
              value: {{ .Values.global.attachment.azAccountName }}
            - name: AZURE_ACCOUNT_KEY
              valueFrom:
                secretKeyRef:
                  name: attachment-secret
                  key: azAccountKey
            - name: AZURE_ACCOUNT_URI
              value: {{ .Values.global.attachment.azAccountUri }}
            - name: AZURE_PERMANENT_CONTAINER
              value: {{ .Values.global.attachment.azContainerNamePermanent }}
            - name: AZURE_TEMPORARY_CONTAINER
              value: {{ .Values.global.attachment.azContainerNameTemporary }}
            - name: AZURE_DELETED_CONTAINER
              value: {{ .Values.global.attachment.azContainerNameDeleted }}
            - name: ALLOW_TYPES
              value: {{ .Values.global.attachment.types }}
            - name: MAX_ATTACHMENT_SIZE
              value: {{ .Values.global.attachment.size | quote }}
            - name: KAFKA_BROKERS
              valueFrom:
                secretKeyRef:
                  name: attachment-secret
                  key: kafkaBrokers
            - name: KAFKA_SASL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: attachment-secret
                  key: kafkaSaslSecretKey
            - name: KAFKA_GROUP_ID
              value: {{ .Values.global.attachment.kafkaGroupId }}
            - name: KAFKA_HAS_SSL
              value: {{ .Values.global.attachment.kafkaHasSsl }}
            - name: KAFKA_SASL_API_KEY
              value: {{ .Values.global.attachment.kafkaSaslApiKey }}
            - name: EVENT_DELETED_RECORD_TOPIC
              value: {{ .Values.global.attachment.kafkaEventDeletedRecordTopic }}
            - name: EVENT_PROCESS_SAVED_RECORD_TOPIC
              value: {{ .Values.global.attachment.kafkaEventSavedRecordTopic }}
            - name: AZURE_SERVICE_BUS_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: attachment-secret
                  key: sbConnection
            - name: AZURE_SERVICE_BUS_TOPIC
              value: {{ .Values.global.attachment.sbTopic }}
            - name: AZURE_SERVICE_BUS_TOPIC_FILE_MOVE_NOTIFICATION
              value: {{ .Values.global.attachment.sbFileMoveNotificationTopic }}
            - name: AZURE_SERVICE_BUS_TOPIC_SCAN_STATUS
              value: {{ .Values.global.attachment.sbScanStatusTopic }}
            - name: AZURE_SERVICE_BUS_FILE_MOVE_NOTIFICATION_SUBSCRIPTION
              value: {{ .Values.global.attachment.sbFileMoveNotificationSubscription }}
            - name: AZURE_SERVICE_BUS_FILE_SCAN_STATUS_SUBSCRIPTION
              value: {{ .Values.global.attachment.sbFileScanStatusSubscription }}
            - name: AZURE_SERVICE_BUS_MAX_RETRY_ATTEMPS
              value: {{ .Values.global.attachment.sbMaxRetryAttemps | quote }}
            - name: AZURE_SERVICE_BUS_RETRY_DELAY_MS
              value: {{ .Values.global.attachment.sbRetryDelayMS | quote }}
          resources:
            requests:
              cpu: "{{ .Values.global.requestsCPURequest }}"
              memory: {{ .Values.global.requestsMemoryRequest }}
            limits:
              memory: {{ .Values.global.requestsMemoryLimit }}
          volumeMounts:
            - name: logs
              mountPath: /logs
      volumes:
        - name: logs
          emptyDir: {}
    {{- if .Values.global.attachment.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.attachment.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.global.attachment.tolerations }}
      tolerations:
{{ toYaml .Values.global.attachment.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.global.attachment.affinity }}
      affinity:
{{ toYaml .Values.global.attachment.affinity | indent 8 }}
    {{- end }} 
